游戏引擎编辑器:
    运行时编辑模式:
        独立进程:
            ✔ 完成独立进程 @done(22-05-09 15:22)
            ✔ 两个进程之间应该可以互相通讯（使用保存功能来确定该机制正确的实现） @done(22-05-09 16:18)
            ✔ 实现了允许开发者优雅的在编辑器进程中调用运行时进程的API（重构了保存功能） @done(22-05-16 10:23)
        序列化/反序列化（保存/读取）:
            ✔ 反序列化 @done(22-05-09 14:02)
            序列化:
                ✔ 将 GameObject 变成 JSON @done(22-05-09 14:35)
                ✔ 将 JSON 变成 YAML文本 @done(22-05-09 14:03)
                ✔ 将 YAML文本写入文件系统 @done(22-05-09 16:18)
        编辑模式/运行模式差异化:
            以物理模块为例:
                ✔ 编辑模式不应移动 @done(22-05-16 11:23)
                ✔ 运行模式不应有刚体轮廓调试信息 @done(22-05-16 11:23)
        ✔ 编辑模式和运行模式的切换 @done(22-05-16 11:23)
    编辑器整体UI:
        ✔ 四个分区 @done(22-05-16 14:19)
        ✔ 基本样式 @done(22-05-16 14:13)
    代码编辑:
        ☐ 整合VSCode
        ☐ 编辑指定文件
        ☐ 编译错误提示
    层级树:
        ✔ 显示所有的 GameObject @done(22-05-16 15:09)
        ✔ 选中 GameObject @done(22-05-16 15:22)
        ✔ 在选中 GameObject 之后更新属性面板 @done(22-05-16 15:47)
        ☐ 新建 GameObject
        ☐ 删除 GameObject
    基础设施:
        ☐ 撤销回退
    属性面板:
        ✔ 显示所有的组件 @done(22-05-16 15:43)
        ✔ 显示属性 @done(22-05-16 16:14)
        ✔ 修改属性 @done(22-05-23 09:34)
        ✔ 根据字段差异，采用不同方式修改属性 @done(22-05-23 11:09)
        ✔ 添加组件 @done(22-05-23 15:14)
            ✔ 获取所有可添加的组件列表 @done(22-05-23 14:30)
            ✔ 添加组件 @done(22-05-23 15:14)
        ✔ 删除组件 @done(22-05-23 15:25)
    运行时遗留功能:
        ☐ 预制体
        ☐ 切换场景

    
    